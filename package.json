{
  "name": "chatgpt-wechatbot",
  "version": "1.0.0",
  "description": "",
  "superagent": "index.js",
  "main": "lib/bundle.cjs.js",
  "module": "lib/bundle.esm.js",
  "type": "module",
  "scripts": {
    "gettoken2": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node src/gettoken.ts",
    "test-api": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node ./src/main-api.ts",
    "test-api2": "MODEL_NAME=ClueAI/ChatYuan-large-v1 MODEL_CLASS=T5ForConditionalGeneration ./node_modules/@waynew/boa/.miniconda/bin/python ./app/main-api.py",
    "test-boa": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node ./app/test-boa.ts",
    "test-boa2": "./node_modules/@waynew/boa/.miniconda/bin/python ./app/answer.py",
    "gettoken": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node src/chatgpt-test.ts",
    "dev2": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node src/index.ts",
    "test-pdf": "ts-node --esm --preferTsExts --experimentalSpecifierResolution node src/test-pdf.ts",
    "dev": "npm run build && node --experimental-fetch lib/bundle.esm.js",
    "build": "rimraf lib/* && rollup -c",
    "watch": "rimraf lib/* && rollup -c -w",
    "install-py": "cd node_modules/@waynew/boa && node ./tools/install-python.js",
    "install-pip": "./node_modules/@waynew/boa/.miniconda/bin/pip install -r requirements.txt",
    "get-transformers": "if [ ! -d transformers ]; then git clone --depth=1 https://github.com/huggingface/transformers.git ; fi",
    "install-transformers": "./node_modules/@waynew/boa/.miniconda/bin/pip install transformers",
    "postinstall": "npm run install-pip && npm run get-transformers && npm run install-transformers",
    "puppet-install": "node node_modules/.bin/wechaty-puppet-install",
    "lint:eslint": "eslint --cache --max-warnings 0  \"{src,mock}/**/*.{ts,tsx}\" --fix",
    "lint:prettier": "prettier --write  \"src/**/*.{js,json,tsx,md}\"",
    "lint:lint-staged": "lint-staged",
    "prepare": "husky install"
  },
  "keywords": [
    "chatgpt",
    "wechat",
    "wechaty",
    "微信机器人",
    "微信助手"
  ],
  "author": "Jin",
  "license": "ISC",
  "dependencies": {
    "@fastify/swagger": "^8.3.1",
    "@fastify/swagger-ui": "^1.4.0",
    "@waynew/boa": "^2.1.2",
    "axios": "^1.3.0",
    "chatgpt": "^3.4.1",
    "dotenv": "^16.0.3",
    "fastify": "^4.13.0",
    "fastify-formidable": "^3.0.0",
    "fastify-sse": "^1.0.0",
    "file-box": "^1.4.15",
    "node-fetch": "^3.3.0",
    "openai": "^3.1.0",
    "p-timeout": "^6.0.0",
    "puppeteer": "^14",
    "qrcode-terminal": "^0.12.0",
    "readline": "^1.3.0",
    "wechaty": "^1.20.2",
    "wechaty-puppet-wechat": "^1.18.4"
  },
  "resolutions": {
    "puppeteer": "^14"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.3.0",
    "@commitlint/config-conventional": "^17.3.0",
    "@rollup/plugin-commonjs": "^21.0.2",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^13.1.3",
    "@rollup/plugin-typescript": "^10.0.1",
    "@types/fs-extra": "^11.0.1",
    "@types/node": "^18.11.11",
    "@typescript-eslint/eslint-plugin": "^5.46.0",
    "@typescript-eslint/parser": "^5.46.0",
    "commitizen": "^4.2.6",
    "commitlint-config-cz": "^0.13.3",
    "eslint": "^8.29.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "fs-extra": "^11.1.0",
    "husky": "^8.0.2",
    "lint-staged": "^13.1.0",
    "prettier": "^2.8.1",
    "rimraf": "^3.0.2",
    "rollup": "^2.68.0",
    "rollup-plugin-node-externals": "^4.0.0",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.2",
    "tslib": "^2.4.1",
    "typescript": "^4.9.3"
  },
  "volta": {
    "node": "19.2.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "{!(package)*.json,*.code-snippets,.!(browserslist)*rc}": [
      "prettier --write--parser json"
    ],
    "package.json": [
      "prettier --write"
    ],
    "*.md": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
