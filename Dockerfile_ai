FROM nvidia/cuda:10.0-base-ubuntu18.04

ARG ALIYUN=""
ARG INSTALL_MODEL=""
ARG GIT_MIRROR=https://ghproxy.com/


RUN rm -rf /etc/apt/sources.list.d/*

ADD ./check-valid-until.txt /etc/apt/apt.conf.d/10no--check-valid-until

ADD ./sources.list /tmp/sources.list.1

RUN if [ "x$ALIYUN" != "xnone" ] ; then mv -f /tmp/sources.list.1 /etc/apt/sources.list ; else rm -rf /tmp/sources.list.1 ; fi

# 各种环境变量
ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
    S6_CMD_ARG0=/sbin/entrypoint.sh \
    DEBIAN_FRONTEND=noninteractive \
    CHROMIUM_FLAGS="--no-sandbox" \
    VNC_GEOMETRY=800x600 \
    VNC_PASSWD=MAX8char \
    DISPLAY=:11 \
    USER_PASSWD=abc1234 \
    GIT_SSL_NO_VERIFY=1 \
    TIGERVNC_VERSION=1.12.0 \
    LANGUAGE=C.UTF-8

RUN apt update -y && apt upgrade -y && apt autoclean -y && apt clean -y && apt install -y cmake \
  git \
  curl \
  ca-certificates wget locales \
  procps \
  nginx sudo \
  tmux \
  unzip \
  libnss3-dev libasound2 \
  build-essential libncursesw5-dev libsndfile1 libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev \
  net-tools \
  xz-utils \
  xorg openbox rxvt-unicode \
  vim && apt install -y libx11-xcb1 && apt-get autoremove -y && apt-get clean && apt install -y libgl1-mesa-glx && apt-get clean && rm -fr /tmp/* /var/lib/apt/lists /home/user/.cache/pip/ /root/.cache

RUN groupadd user && useradd -s /bin/bash -d /home/user -m -g user user && echo "user:password" | chpasswd && echo '' >> /etc/sudoers && echo 'user  ALL=(ALL:ALL) ALL' >> /etc/sudoers

COPY ./requirements.txt /app/requirements.txt

RUN set -ex \
    && if [ "x$ALIYUN" != "xnone" ] ; then \
      (echo $GIT_MIRROR > /tmp/HTTP_GIT_PREFIX && git config --global url."${GIT_MIRROR}https://github.com".insteadOf https://github.com); \
    else \
      touch /tmp/HTTP_GIT_PREFIX; \
    fi


ENV PYTHON_VERSION 3.10.6

# # Set-up necessary Env vars for PyEnv
ENV PYENV_ROOT=/home/user/.pyenv
ENV PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

# # Install pyenv
RUN set -ex \
    && if [ "x$ALIYUN" != "xnone" ] ; then \
      (echo $GIT_MIRROR > /tmp/HTTP_GIT_PREFIX && git config --global url."${GIT_MIRROR}https://github.com".insteadOf https://github.com); \
    else \
      touch /tmp/HTTP_GIT_PREFIX; \
    fi \
    && curl "`cat /tmp/HTTP_GIT_PREFIX`https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer" | bash \
    && pyenv update \
    && if [ "x$ALIYUN" != "xnone" ] ; then wget https://npm.taobao.org/mirrors/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz -P /home/user/.pyenv/cache/; fi \
    && pyenv install $PYTHON_VERSION \
    && pyenv global $PYTHON_VERSION \
    && pyenv rehash


RUN if [ "x$ALIYUN" != "xnone" ] ; then \
      (python3 -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple && python3 -m pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple); \
    else \
      python3 -m pip install --upgrade pip; \
    fi && \
    git clone --depth=1 https://github.com/huggingface/transformers.git && python3 -m pip install ./transformers && rm -rf transformers && \
    # python3 -m pip install transformers && \
    python3 -m pip install --upgrade --force-reinstall -r /app/requirements.txt && \
    rm -fr /tmp/* /home/user/.cache/pip/ /root/.cache

USER user

ADD ./app /app/app/
ADD ./src/text-tu-audio.html /app/src/text-tu-audio.html
ADD ./src/chatbot.html /app/src/chatbot.html
ADD ./src/pdf.html /app/src/pdf.html

# RUN if [ "x$INSTALL_MODEL" != "xnone" ] ; then python /app/app/answer.py; fi

# ADD --chown=user:user ./models--ClueAI--ChatYuan-large-v1 /home/user/.cache/huggingface/hub/models--ClueAI--ChatYuan-large-v1/

CMD ["python", "/app/app/main-api.py"]

EXPOSE 3000

ENV MODEL_NAME=EleutherAI/pythia-70m-deduped
ENV MODEL_CLASS=T5ForConditionalGeneration
ENV MODEL_TOKENIZER=AutoTokenizer
ENV torch_device=cpu

WORKDIR /app/app

# docker build . -t docker.io/jonneywu/wechatbot:1 -f Dockerfile_ai  --squash
# docker build . -t docker.io/jonneywu/wechatbot:1 -f Dockerfile_ai --build-arg INSTALL_MODEL=none  --squash
# docker build . -t docker.io/jonneywu/wechatbot:1 -f Dockerfile_ai --build-arg ALIYUN=none
# docker run -ti --name vnc-test -v $(cd ~;pwd)/.cache:/home/user/.cache -p 3000:3000 --rm docker.io/jonneywu/wechatbot:1 bash
# docker run -ti --name vnc-test -v $(cd ~;pwd)/.cache:/home/user/.cache --rm docker.io/jonneywu/wechatbot:1

# docker run -e torch_device=cpu -v $(cd ~;pwd)/.cache:/home/user/.cache -p 9000:9000  -p 8000:8000 --rm --name ai-test -ti docker.io/jonneywu/wechatbot:1
# docker run --gpus all -e torch_device=cuda -v $(cd ~;pwd)/.cache:/home/user/.cache -p 9000:9000  -p 8000:8000 --rm --name ai-test -ti docker.io/jonneywu/wechatbot:1

# docker run  -e torch_device=cpu -v D:/.cache:/home/user/.cache  -p 9000:9000  -p 8000:8000 --rm --name ai-test -ti docker.io/jonneywu/wechatbot:1

# docker run  -e MODEL_CLASS=T5ForConditionalGeneration -e MODEL_NAME=ClueAI/ChatYuan-large-v1 --gpus all -e torch_device=cuda -v $(cd ~;pwd)/.cache:/home/user/.cache -p 3000:3000 -d --name ai-test -ti registry.cn-hangzhou.aliyuncs.com/jajabjbj/wechatbot:latest

# node_modules/@waynew/boa/.miniconda/lib/python3.9/site-packages/espnet_model_zoo/5d13d5d0aa070f4c5734047fda658178
